{"version":3,"sources":["views/HomePage.js","utils/axios.js","views/MoviesPage.js","components/Reviews/Reviews.js","components/Cast/Cast.js","routes.js","views/MovieDetailsPage.js","views/NotFound.js","components/container/Navigation.js","components/AppBar/AppBar.js","App.js","index.js"],"names":["HomePage","state","movies","a","axios","get","response","this","setState","data","results","length","map","movie","to","id","original_title","Component","instance","create","baseURL","params","api_key","MoviesPage","query","page","makeRequest","value","URLSearchParams","language","toString","handleChange","evt","target","handleSubmit","preventDefault","props","history","push","search","location","has","locationQuery","onSubmit","type","onChange","pathname","from","Reviews","reviews","content","Cast","cast","url","el","height","src","profile_path","alt","name","character","MovieDetailsPage","baseUrl","genres","overview","vote_average","backdrop_path","castList","reviewsData","handleGoBack","routes","movieId","match","responseCast","responseReviews","className","onClick","path","render","NotFound","Navigation","AppBar","App","exact","component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d729b7f2.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass HomePage extends Component {\r\n  state = { movies: '' };\r\n\r\n  async componentDidMount() {\r\n    const response = await axios.get(\r\n      'https://api.themoviedb.org/3/trending/movie/day?api_key=c2a3095b3c93af2cd3988a9dd6f9ca00',\r\n    );\r\n    this.setState({ movies: response.data.results });\r\n  }\r\n\r\n  render() {\r\n    const { movies } = this.state;\r\n\r\n    return (\r\n      <>\r\n        {movies.length > 0 && (\r\n          <ul>\r\n            {movies.map(movie => (\r\n              <li key={movie.id}>\r\n                <Link to={`/movies/${movie.id}`}>{movie.original_title}</Link>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://api.themoviedb.org/3',\r\n  params: {\r\n    api_key: 'c2a3095b3c93af2cd3988a9dd6f9ca00',\r\n  },\r\n});\r\n\r\nexport default instance;\r\n","import React, { Component } from 'react';\r\nimport axios from '../utils/axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass MoviesPage extends Component {\r\n  state = {\r\n    query: '',\r\n    movies: [],\r\n    page: 1,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const search = this.props.location.search;\r\n    const params = new URLSearchParams(search);\r\n\r\n    if (params.has('query')) {\r\n      const locationQuery = params.get('query');\r\n      const data = await this.makeRequest(this.state.page, locationQuery);\r\n      this.setState({ movies: data.results });\r\n    }\r\n  }\r\n\r\n  makeRequest = async (page, value) => {\r\n    const params = new URLSearchParams({\r\n      page: page,\r\n      query: value,\r\n      language: 'en-US',\r\n    });\r\n\r\n    const response = await axios.get(`search/movie?${params.toString()}`);\r\n\r\n    return response.data;\r\n  };\r\n\r\n  handleChange = evt => {\r\n    this.setState({ query: evt.target.value });\r\n  };\r\n\r\n  handleSubmit = async evt => {\r\n    evt.preventDefault();\r\n\r\n    this.props.history.push({\r\n      search: `?query=${this.state.query}`,\r\n    });\r\n\r\n    const data = await this.makeRequest(this.state.page, this.state.query);\r\n    this.setState({ movies: data.results });\r\n  };\r\n\r\n  render() {\r\n    const { query, movies } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label>\r\n            Movie\r\n            <input\r\n              type=\"text\"\r\n              value={query}\r\n              onChange={this.handleChange}\r\n            ></input>\r\n          </label>\r\n          <button type=\"submit\">search</button>\r\n        </form>\r\n\r\n        {movies && (\r\n          <ul>\r\n            {movies.map(movie => (\r\n              <li key={movie.id}>\r\n                <Link\r\n                  to={{\r\n                    pathname: `/movies/${movie.id}`,\r\n                    state: {\r\n                      from: {\r\n                        search: `${this.props.location.search}`,\r\n                        pathname: this.props.location.pathname,\r\n                      },\r\n                    },\r\n                  }}\r\n                >\r\n                  {movie.original_title}\r\n                </Link>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesPage;\r\n","import React from 'react';\r\n\r\nconst Reviews = ({ reviews }) => {\r\n  return reviews.length > 0 ? (\r\n    <p>{reviews[0].content}</p>\r\n  ) : (\r\n    <p>We don't have any reviews for this movie</p>\r\n  );\r\n};\r\n\r\nexport default Reviews;\r\n","import React from 'react';\r\nimport './Cast.css';\r\n\r\nconst Cast = ({ cast, url }) => {\r\n  return (\r\n    <ul>\r\n      {cast.map(el => (\r\n        <li key={el.id}>\r\n          <img height=\"150\" src={`${url}${el.profile_path}`} alt=\"actor\"></img>\r\n          <p>Name: {el.name}</p>\r\n          <p>Character: {el.character}</p>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Cast;\r\n","export default {\r\n  home: '/',\r\n  movies: '/movies',\r\n  moviesDetails: '/movies/:movieId',\r\n  moviesCast: '/movies/:movieId/cast',\r\n  moviesReviews: '/movies/:movieId/reviews',\r\n};\r\n","import React, { Component } from 'react';\r\nimport axios from '../utils/axios';\r\nimport { Route, NavLink } from 'react-router-dom';\r\nimport Reviews from '../components/Reviews';\r\nimport Cast from '../components/Cast';\r\nimport routes from '../routes';\r\nimport './MovieDetails.css';\r\n\r\nclass MovieDetailsPage extends Component {\r\n  state = {\r\n    baseUrl: 'https://image.tmdb.org/t/p/w500/',\r\n    genres: null,\r\n    id: null,\r\n    original_title: null,\r\n    overview: null,\r\n    vote_average: null,\r\n    backdrop_path: null,\r\n    castList: null,\r\n    reviewsData: null,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { movieId } = this.props.match.params;\r\n\r\n    const response = await axios.get(\r\n      `movie/${movieId}?append_to_response=videos,images`,\r\n    );\r\n    this.setState({ ...response.data });\r\n\r\n    const responseCast = await axios.get(\r\n      `movie/${movieId}/credits?&language=en-US`,\r\n    );\r\n    this.setState({ castList: responseCast.data.cast });\r\n\r\n    const responseReviews = await axios.get(\r\n      `movie/${movieId}/reviews?&language=en-US&page=1`,\r\n    );\r\n    this.setState({ reviewsData: responseReviews.data.results });\r\n  }\r\n\r\n  handleGoBack = () => {\r\n    const { location, history } = this.props;\r\n\r\n    if (location.state && location.state.from) {\r\n      return history.push(location.state.from);\r\n    }\r\n    history.push(routes.home);\r\n  };\r\n\r\n  render() {\r\n    const { backdrop_path, baseUrl, original_title, overview, vote_average } =\r\n      this.state;\r\n    const { match } = this.props;\r\n\r\n    return (\r\n      <>\r\n        {backdrop_path && (\r\n          <>\r\n            <button\r\n              className=\"Back-btn\"\r\n              type=\"button\"\r\n              onClick={this.handleGoBack}\r\n            >\r\n              Go back\r\n            </button>\r\n\r\n            <div className=\"container\">\r\n              <img\r\n                className=\"movie-img\"\r\n                src={`${baseUrl}${backdrop_path}`}\r\n                alt={original_title}\r\n              ></img>\r\n              <div className=\"description-container\">\r\n                <h1>{original_title}</h1>\r\n                <p>User score: {vote_average}</p>\r\n                <h2>Overview</h2>\r\n                <p>{overview}</p>\r\n              </div>\r\n            </div>\r\n            <ul className=\"add-inf\">\r\n              Additional information\r\n              <li>\r\n                <NavLink\r\n                  to={{\r\n                    pathname: `${this.props.match.url}/cast`,\r\n                    state: this.props.location.state,\r\n                  }}\r\n                >\r\n                  Cast\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink\r\n                  to={{\r\n                    pathname: `${this.props.match.url}/reviews`,\r\n                    state: this.props.location.state,\r\n                  }}\r\n                >\r\n                  Reviews\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n\r\n            <Route\r\n              path={`${match.path}/cast`}\r\n              render={props => (\r\n                <Cast\r\n                  {...props}\r\n                  cast={this.state.castList}\r\n                  url={this.state.baseUrl}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              path={`${match.path}/reviews`}\r\n              render={props => (\r\n                <Reviews {...props} reviews={this.state.reviewsData} />\r\n              )}\r\n            />\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieDetailsPage;\r\n","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n  return <p>Page is not found</p>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport routes from '../../routes';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <nav>\r\n      <NavLink to={routes.movies}>Movies</NavLink>\r\n      <br />\r\n      <NavLink to={routes.home}>Home</NavLink>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport Navigation from '../container/Navigation';\r\n\r\nconst AppBar = () => {\r\n  return (\r\n    <header>\r\n      <Navigation />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default AppBar;\r\n","import './App.css';\nimport { Route, Switch } from 'react-router-dom';\nimport HomePage from './views/HomePage';\nimport MoviesPage from './views/MoviesPage';\nimport MovieDetailsPage from './views/MovieDetailsPage';\nimport Cast from './components/Cast';\nimport Reviews from './components/Reviews';\nimport NotFound from './views/NotFound';\nimport routes from './routes';\nimport AppBar from './components/AppBar';\n\nconst App = () => (\n  <>\n    <AppBar />\n\n    <Switch>\n      <Route exact path={routes.home} component={HomePage} />\n      <Route exact path={routes.movies} component={MoviesPage} />\n      <Route path={routes.moviesDetails} component={MovieDetailsPage} />\n      <Route path={routes.moviesCast} component={Cast} />\n      <Route path={routes.moviesReviews} component={Reviews} />\n      <Route component={NotFound} />\n    </Switch>\n  </>\n);\n\nexport default App;\n// '/' - компонент <HomePage>, домашняя страница со списком популярных кинофильмов.\n// '/movies' - компонент <MoviesPage>, страница поиска фильмов по ключевому слову.\n// '/movies/:movieId' - компонент <MovieDetailsPage>, страница с детальной информацией о кинофильме.\n// /movies/:movieId/cast - компонент <Cast>, информация о актерском составе. Рендерится на странице <MovieDetailsPage>.\n// /movies/:movieId/reviews\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}