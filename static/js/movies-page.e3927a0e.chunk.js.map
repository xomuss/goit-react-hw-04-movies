{"version":3,"sources":["utils/axios.js","views/MoviesPage.js"],"names":["instance","axios","create","baseURL","params","api_key","MoviesPage","state","query","movies","page","makeRequest","value","a","URLSearchParams","language","get","toString","response","data","handleChange","evt","setState","target","handleSubmit","preventDefault","props","history","push","search","results","this","location","has","locationQuery","onSubmit","type","onChange","map","movie","to","pathname","id","from","original_title","Component"],"mappings":"yIAAA,YAEMA,EAFN,OAEiBC,EAAMC,OAAO,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIEL,O,iICLTM,E,4MACJC,MAAQ,CACNC,MAAO,GACPC,OAAQ,GACRC,KAAM,G,EAcRC,Y,uCAAc,WAAOD,EAAME,GAAb,iBAAAC,EAAA,6DACNT,EAAS,IAAIU,gBAAgB,CACjCJ,KAAMA,EACNF,MAAOI,EACPG,SAAU,UAJA,SAOWd,IAAMe,IAAN,uBAA0BZ,EAAOa,aAP5C,cAONC,EAPM,yBASLA,EAASC,MATJ,2C,0DAYdC,aAAe,SAAAC,GACb,EAAKC,SAAS,CAAEd,MAAOa,EAAIE,OAAOX,S,EAGpCY,a,uCAAe,WAAMH,GAAN,eAAAR,EAAA,6DACbQ,EAAII,iBAEJ,EAAKC,MAAMC,QAAQC,KAAK,CACtBC,OAAO,UAAD,OAAY,EAAKtB,MAAMC,SAJlB,SAOM,EAAKG,YAAY,EAAKJ,MAAMG,KAAM,EAAKH,MAAMC,OAPnD,OAOPW,EAPO,OAQb,EAAKG,SAAS,CAAEb,OAAQU,EAAKW,UARhB,2C,oJA3Bf,kCAAAjB,EAAA,yDACQgB,EAASE,KAAKL,MAAMM,SAASH,SAC7BzB,EAAS,IAAIU,gBAAgBe,IAExBI,IAAI,SAJjB,uBAKUC,EAAgB9B,EAAOY,IAAI,SALrC,SAMuBe,KAAKpB,YAAYoB,KAAKxB,MAAMG,KAAMwB,GANzD,OAMUf,EANV,OAOIY,KAAKT,SAAS,CAAEb,OAAQU,EAAKW,UAPjC,gD,0EAsCA,WAAU,IAAD,OACP,EAA0BC,KAAKxB,MAAvBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OAEf,OACE,qCACE,uBAAM0B,SAAUJ,KAAKP,aAArB,UACE,0CAEE,uBACEY,KAAK,OACLxB,MAAOJ,EACP6B,SAAUN,KAAKX,kBAGnB,wBAAQgB,KAAK,SAAb,uBAGD3B,GACC,6BACGA,EAAO6B,KAAI,SAAAC,GAAK,OACf,6BACE,cAAC,IAAD,CACEC,GAAI,CACFC,SAAS,WAAD,OAAaF,EAAMG,IAC3BnC,MAAO,CACLoC,KAAM,CACJd,OAAO,GAAD,OAAK,EAAKH,MAAMM,SAASH,QAC/BY,SAAU,EAAKf,MAAMM,SAASS,YANtC,SAWGF,EAAMK,kBAZFL,EAAMG,gB,GAjEJG,aAwFVvC","file":"static/js/movies-page.e3927a0e.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://api.themoviedb.org/3',\r\n  params: {\r\n    api_key: 'c2a3095b3c93af2cd3988a9dd6f9ca00',\r\n  },\r\n});\r\n\r\nexport default instance;\r\n","import React, { Component } from 'react';\r\nimport axios from '../utils/axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass MoviesPage extends Component {\r\n  state = {\r\n    query: '',\r\n    movies: [],\r\n    page: 1,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const search = this.props.location.search;\r\n    const params = new URLSearchParams(search);\r\n\r\n    if (params.has('query')) {\r\n      const locationQuery = params.get('query');\r\n      const data = await this.makeRequest(this.state.page, locationQuery);\r\n      this.setState({ movies: data.results });\r\n    }\r\n  }\r\n\r\n  makeRequest = async (page, value) => {\r\n    const params = new URLSearchParams({\r\n      page: page,\r\n      query: value,\r\n      language: 'en-US',\r\n    });\r\n\r\n    const response = await axios.get(`search/movie?${params.toString()}`);\r\n\r\n    return response.data;\r\n  };\r\n\r\n  handleChange = evt => {\r\n    this.setState({ query: evt.target.value });\r\n  };\r\n\r\n  handleSubmit = async evt => {\r\n    evt.preventDefault();\r\n\r\n    this.props.history.push({\r\n      search: `?query=${this.state.query}`,\r\n    });\r\n\r\n    const data = await this.makeRequest(this.state.page, this.state.query);\r\n    this.setState({ movies: data.results });\r\n  };\r\n\r\n  render() {\r\n    const { query, movies } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label>\r\n            Movie\r\n            <input\r\n              type=\"text\"\r\n              value={query}\r\n              onChange={this.handleChange}\r\n            ></input>\r\n          </label>\r\n          <button type=\"submit\">search</button>\r\n        </form>\r\n\r\n        {movies && (\r\n          <ul>\r\n            {movies.map(movie => (\r\n              <li key={movie.id}>\r\n                <Link\r\n                  to={{\r\n                    pathname: `/movies/${movie.id}`,\r\n                    state: {\r\n                      from: {\r\n                        search: `${this.props.location.search}`,\r\n                        pathname: this.props.location.pathname,\r\n                      },\r\n                    },\r\n                  }}\r\n                >\r\n                  {movie.original_title}\r\n                </Link>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesPage;\r\n"],"sourceRoot":""}